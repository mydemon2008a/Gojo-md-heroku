const fs = require('fs');
const path = require('path');
const axios = require('axios');
const AdmZip = require('adm-zip');

// ZIP ‡∂ë‡∂ö ‡∂∂‡∑è‡∂ú‡∑ô‡∂±, Extract ‡∂ö‡∂ª‡∂Ω‡∑è Plugins load ‡∂ö‡∂ª‡∂Ω‡∑è index.js run ‡∂ö‡∂ª‡∂± function ‡∂ë‡∂ö
async function downloadAndExtractZip(zipUrl) {
  const zipPath = path.join(__dirname, 'temp.zip');
  const extractPath = __dirname;

  try {
    // ZIP ‡∂ë‡∂ö ‡∂∂‡∑è‡∂ú‡∂±‡∑ä‡∂±
    const response = await axios({
      method: 'GET',
      url: zipUrl,
      responseType: 'stream'
    });

    const writer = fs.createWriteStream(zipPath);
    response.data.pipe(writer);

    await new Promise((resolve, reject) => {
      writer.on('finish', resolve);
      writer.on('error', reject);
    });

    console.log('‚úÖ ZIP ‡∂ë‡∂ö ‡∂∂‡∑è‡∂ú‡∂≠‡∑ä‡∂≠‡∑è.');

    // ZIP ‡∂ë‡∂ö extract ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
    const zip = new AdmZip(zipPath);
    zip.extractAllTo(extractPath, true);
    console.log('‚úÖ ZIP ‡∂ë‡∂ö extract ‡∂ö‡∂ª‡∑è.');

    // temp.zip delete ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
    fs.unlinkSync(zipPath);
    console.log('üóëÔ∏è ZIP file ‡∂ë‡∂ö delete ‡∂ö‡∂ª‡∑è.');

    // plugins load ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
    const pluginDir = path.join(__dirname, 'plugins');
    if (fs.existsSync(pluginDir)) {
      const plugins = fs.readdirSync(pluginDir).filter(f => f.endsWith('.js'));

      if (plugins.length === 0) {
        console.warn('‚ö†Ô∏è plugins folder ‡∂ë‡∂ö‡∑ö plugin ‡∂ö‡∑í‡∑É‡∑í‡∑Ä‡∂ö‡∑ä ‡∂±‡∑ë!');
      }

      for (const file of plugins) {
        try {
          require(path.join(pluginDir, file));
          console.log(`‚úÖ Plugin loaded: ${file}`);
        } catch (e) {
          console.error(`‚ùå Plugin load error (${file}):`, e);
        }
      }
    } else {
      console.warn('‚ö†Ô∏è plugins folder ‡∂ë‡∂ö ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑î‡∂´‡∑è!');
    }

    // ‚úÖ index.js run ‡∂ö‡∂ª‡∂±‡∑ä‡∂± (plugins load ‡∑Ä‡∑ô‡∂Ω‡∑è‡∂∏ ‡∂¥‡∑É‡∑ä‡∑É‡∑ö)
    const indexPath = path.join(__dirname, 'index.js');
    if (fs.existsSync(indexPath)) {
      console.log('üöÄ index.js ‡∂ë‡∂ö run ‡∂ö‡∂ª‡∂∏‡∑í‡∂±‡∑ä...');
      require(indexPath);
    } else {
      console.warn('‚ö†Ô∏è index.js ‡∂ë‡∂ö ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑î‡∂´‡∑è!');
    }

    console.log('üöÄ Bot system ready.');

  } catch (err) {
    console.error('‚ùå Error during setup:', err);
  }
}

// üîó ZIP URL
const zipUrl = 'https://files.catbox.moe/t5j389.zip';

// ‚ñ∂Ô∏è Call the function
downloadAndExtractZip(zipUrl);
